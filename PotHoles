#install.packages("RSocrata")
library(RSocrata)
library(rgdal)
library(sp)
library(spdep)
library(rspatial)
library(gstat)
library(lubridate)

#Reads data from API
data <-read.socrata("https://data.nola.gov/resource/m959-fs8u.csv")
data.frame(data)

data <- filter(data, issue_type == "Pothole/Roadway Surface Repair")
open <- data$ticket_created_date_time %>%  ymd_hms()
close <- data$ticket_closed_date_time %>%  ymd_hms()

duration <- difftime(open, close, units = "days") %>% abs() 
open <- data$ticket_created_date_time 
close <- data$ticket_closed_date_time
lat <- data$latitude
long <- data$longitude
options(scipen=999)

df <- cbind(data$ticket_id,lat,long,duration) %>% data.frame() %>% na.omit()
colnames(df) <- c("ID", "lat", "long", "duration")
write.csv(df,"df.csv")

#Garbage Collection
rm(data)
rm(df)
rm(open)
rm(close)
rm(lat)
rm(long)
rm(duration)

df <-read.table("df.csv",header=TRUE) 



#Confirms Ticket Issues for potholes have been open for years 
# <- filter(data, data$ticket_id == "101000590546")

df <- read_csv("df.csv")
  cols(
    X1 = col_double(),
    ID = col_double(),
    lat = col_double(),
    long = col_double(),
    duration = col_double()
  )

coordinates(df)<-c("lat","long")

class(df)

df_grid <-spsample(df,"regular", n=3720)

class(df_grid)

gridded(df_grid) <- TRUE


fullgrid(df_grid) <- TRUE
class(dfff_grid)

exp <- 2
z <- df$duration

map <- interpolate(z,df, df_grid,exp) #call the function



> exp<-1 #repeat for inverse distance
> map<-interpolate(z,alta,alta_grid,exp)
[inverse distance weighted interpolation]
> exp<-3 #repeat for e = 3
> map<-interpolate(z,alta,alta_grid,exp)
[inverse distance weighted interpolation]
